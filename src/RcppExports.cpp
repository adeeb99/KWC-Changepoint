// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mySeq
arma::uvec mySeq(unsigned int s, unsigned int e);
RcppExport SEXP _KWCChangepoint_mySeq(SEXP sSEXP, SEXP eSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type s(sSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type e(eSEXP);
    rcpp_result_gen = Rcpp::wrap(mySeq(s, e));
    return rcpp_result_gen;
END_RCPP
}
// cost_cpp
double cost_cpp(unsigned int s, unsigned int e, arma::rowvec data);
RcppExport SEXP _KWCChangepoint_cost_cpp(SEXP sSEXP, SEXP eSEXP, SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type s(sSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type e(eSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(cost_cpp(s, e, data));
    return rcpp_result_gen;
END_RCPP
}
// updateR
arma::uvec updateR(arma::uvec R1, arma::rowvec obj, double F_tau_star, double beta, double K, double tau_star);
RcppExport SEXP _KWCChangepoint_updateR(SEXP R1SEXP, SEXP objSEXP, SEXP F_tau_starSEXP, SEXP betaSEXP, SEXP KSEXP, SEXP tau_starSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type R1(R1SEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type obj(objSEXP);
    Rcpp::traits::input_parameter< double >::type F_tau_star(F_tau_starSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type tau_star(tau_starSEXP);
    rcpp_result_gen = Rcpp::wrap(updateR(R1, obj, F_tau_star, beta, K, tau_star));
    return rcpp_result_gen;
END_RCPP
}
// PELT
arma::mat PELT(arma::rowvec data, int N, double beta, double K);
RcppExport SEXP _KWCChangepoint_PELT(SEXP dataSEXP, SEXP NSEXP, SEXP betaSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(PELT(data, N, beta, K));
    return rcpp_result_gen;
END_RCPP
}
// getOnes
int getOnes(arma::mat vec);
RcppExport SEXP _KWCChangepoint_getOnes(SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type vec(vecSEXP);
    rcpp_result_gen = Rcpp::wrap(getOnes(vec));
    return rcpp_result_gen;
END_RCPP
}
// PELT_NL
arma::mat PELT_NL(arma::rowvec data, int N, double c2, int m0);
RcppExport SEXP _KWCChangepoint_PELT_NL(SEXP dataSEXP, SEXP NSEXP, SEXP c2SEXP, SEXP m0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type c2(c2SEXP);
    Rcpp::traits::input_parameter< int >::type m0(m0SEXP);
    rcpp_result_gen = Rcpp::wrap(PELT_NL(data, N, c2, m0));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_KWCChangepoint_mySeq", (DL_FUNC) &_KWCChangepoint_mySeq, 2},
    {"_KWCChangepoint_cost_cpp", (DL_FUNC) &_KWCChangepoint_cost_cpp, 3},
    {"_KWCChangepoint_updateR", (DL_FUNC) &_KWCChangepoint_updateR, 6},
    {"_KWCChangepoint_PELT", (DL_FUNC) &_KWCChangepoint_PELT, 4},
    {"_KWCChangepoint_getOnes", (DL_FUNC) &_KWCChangepoint_getOnes, 1},
    {"_KWCChangepoint_PELT_NL", (DL_FUNC) &_KWCChangepoint_PELT_NL, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_KWCChangepoint(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
